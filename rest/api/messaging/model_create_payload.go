/*
 * This code was generated by
 *  ___ ___   _   ___ _  _    _____ _   _    _  ___   ___      _   ___ ___      ___   _   ___     ___ ___ _  _ ___ ___    _ _____ ___  ___ 
 * | _ \ __| /_\ / __| || |__|_   _/_\ | |  | |/ | \ / / |    /_\ | _ ) __|___ / _ \ /_\ |_ _|__ / __| __| \| | __| _ \  /_\_   _/ _ \| _ \
 * |   / _| / _ \ (__| __ |___|| |/ _ \| |__| ' < \ V /| |__ / _ \| _ \__ \___| (_) / _ \ | |___| (_ | _|| .` | _||   / / _ \| || (_) |   /
 * |_|_\___/_/ \_\___|_||_|    |_/_/ \_\____|_|\_\ |_| |____/_/ \_\___/___/    \___/_/ \_\___|   \___|___|_|\_|___|_|_\/_/ \_\_| \___/|_|_\
 * 
 * Reach Messaging API
 * Reach SMS API helps you add robust messaging capabilities to your applications.  Using this REST API, you can * send SMS messages * track the delivery of sent messages * schedule SMS messages to send at a later time * retrieve and modify message history
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package openapi
import (
	"encoding/json"
	"github.com/talkylabs/reach-go/client"
	"time"
)
// CreatePayload struct for CreatePayload
type CreatePayload struct {
		// The destination phone number in E.164 format of the message.
	Dest string `json:"dest"`
		// The phone number (in E.164 format), or the alphanumeric sender ID that initiated the message.
	Src string `json:"src"`
		// The text of the message to send. It can be up to 1,600 GSM-7 characters in length. That limit varies if your message is not made of only GSM-7 characters. More generally, the message body should not exceed 10 segments.
	Body string `json:"body"`
		// The identifier of the bulk operation this message belongs to.
	BulkIdentifier string `json:"bulkIdentifier,omitempty"`
		// The datetime at which the message will be sent. Must be in ISO 8601 format. A message must be scheduled at least 15 min in advance of message send time and cannot be scheduled more than 5 days in advance of the request.
	ScheduledTime time.Time `json:"scheduledTime,omitempty"`
		// The URL that will be called to send status information of your message. If provided, the API POST these message status changes to the URL: `queued`, `failed`, `sent`, `canceled`, `delivered`, or `undelivered`. URLs must contain a valid hostname and underscores are not allowed. 
	StatusCallback string `json:"statusCallback,omitempty"`
		// The maximum total price in the applet currency that should be paid for the message to be delivered. If the cost exceeds `maxPrice`, the message will fail and a status of `failed` is sent to the status callback. 
	MaxPrice float32 `json:"maxPrice,omitempty"`
		// It represents how long, in seconds, the message can remain in the queue. After this period elapses, the message fails and the status callback is called. After a message has been accepted by a carrier, however, there is no guarantee that the message will not be queued after this period. It is recommended that this value be at least 5 seconds. The maximum allowed value is 14,400 which corresponds to 4 hours. 
	ValidityPeriod int `json:"validityPeriod,omitempty"`
}

func (response *CreatePayload) UnmarshalJSON(bytes []byte) (err error) {
	raw := struct {
		Dest string `json:"dest"`
		Src string `json:"src"`
		Body string `json:"body"`
		BulkIdentifier string `json:"bulkIdentifier"`
		ScheduledTime time.Time `json:"scheduledTime"`
		StatusCallback string `json:"statusCallback"`
		MaxPrice interface{} `json:"maxPrice"`
		ValidityPeriod int `json:"validityPeriod"`
	}{}

	if err = json.Unmarshal(bytes, &raw); err != nil {
		return err
	}

	*response = CreatePayload{
		Dest: raw.Dest,
		Src: raw.Src,
		Body: raw.Body,
		BulkIdentifier: raw.BulkIdentifier,
		ScheduledTime: raw.ScheduledTime,
		StatusCallback: raw.StatusCallback,
		ValidityPeriod: raw.ValidityPeriod,
	}

	responseMaxPrice, err := client.UnmarshalFloat32(&raw.MaxPrice)
	if err != nil {
		return err
	}
	response.MaxPrice = *responseMaxPrice

	return
}

